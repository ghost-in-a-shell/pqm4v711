ARM GAS  /tmp/ccnTtYTB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Error_Handler:
  26              	.LFB132:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "rng.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccnTtYTB.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccnTtYTB.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_RNG_Init();
  91:Core/Src/main.c ****   MX_USART1_UART_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   printf("testmessageaaaaaaaaaaaaaaaaaaaa");
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief System Clock Configuration
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** void SystemClock_Config(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 125:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 126:Core/Src/main.c ****   */
 127:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 137:Core/Src/main.c ****   {
 138:Core/Src/main.c ****     Error_Handler();
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 144:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
ARM GAS  /tmp/ccnTtYTB.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /* USER CODE END 4 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /**
 161:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** void Error_Handler(void)
 165:Core/Src/main.c **** {
  28              		.loc 1 165 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LBB4:
  35              	.LBB5:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccnTtYTB.s 			page 5


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccnTtYTB.s 			page 6


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  /tmp/ccnTtYTB.s 			page 7


  37              		.loc 2 142 0
  38              		.syntax unified
  39              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  40 0000 72B6     		cpsid i
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.L2:
  45 0002 FEE7     		b	.L2
  46              	.LBE5:
  47              	.LBE4:
  48              		.cfi_endproc
  49              	.LFE132:
  51              		.section	.text.SystemClock_Config,"ax",%progbits
  52              		.align	1
  53              		.global	SystemClock_Config
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	SystemClock_Config:
  60              	.LFB131:
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  61              		.loc 1 115 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 80
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65 0000 00B5     		push	{lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 14, -4
  69 0002 95B0     		sub	sp, sp, #84
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 88
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  72              		.loc 1 116 0
  73 0004 3022     		movs	r2, #48
  74 0006 0021     		movs	r1, #0
  75 0008 08A8     		add	r0, sp, #32
  76 000a FFF7FEFF 		bl	memset
  77              	.LVL0:
 117:Core/Src/main.c **** 
  78              		.loc 1 117 0
  79 000e 0023     		movs	r3, #0
  80 0010 0393     		str	r3, [sp, #12]
  81 0012 0493     		str	r3, [sp, #16]
  82 0014 0593     		str	r3, [sp, #20]
  83 0016 0693     		str	r3, [sp, #24]
  84 0018 0793     		str	r3, [sp, #28]
  85              	.LBB6:
 121:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  86              		.loc 1 121 0
  87 001a 0193     		str	r3, [sp, #4]
  88 001c 1C4A     		ldr	r2, .L9
  89 001e 116C     		ldr	r1, [r2, #64]
  90 0020 41F08051 		orr	r1, r1, #268435456
  91 0024 1164     		str	r1, [r2, #64]
ARM GAS  /tmp/ccnTtYTB.s 			page 8


  92 0026 126C     		ldr	r2, [r2, #64]
  93 0028 02F08052 		and	r2, r2, #268435456
  94 002c 0192     		str	r2, [sp, #4]
  95 002e 019A     		ldr	r2, [sp, #4]
  96              	.LBE6:
  97              	.LBB7:
 122:Core/Src/main.c **** 
  98              		.loc 1 122 0
  99 0030 0293     		str	r3, [sp, #8]
 100 0032 184A     		ldr	r2, .L9+4
 101 0034 1168     		ldr	r1, [r2]
 102 0036 41F48041 		orr	r1, r1, #16384
 103 003a 1160     		str	r1, [r2]
 104 003c 1268     		ldr	r2, [r2]
 105 003e 02F48042 		and	r2, r2, #16384
 106 0042 0292     		str	r2, [sp, #8]
 107 0044 029A     		ldr	r2, [sp, #8]
 108              	.LBE7:
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 109              		.loc 1 127 0
 110 0046 0222     		movs	r2, #2
 111 0048 0892     		str	r2, [sp, #32]
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 112              		.loc 1 128 0
 113 004a 0121     		movs	r1, #1
 114 004c 0B91     		str	r1, [sp, #44]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 115              		.loc 1 129 0
 116 004e 1021     		movs	r1, #16
 117 0050 0C91     		str	r1, [sp, #48]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 118              		.loc 1 130 0
 119 0052 0E92     		str	r2, [sp, #56]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 120              		.loc 1 131 0
 121 0054 0F93     		str	r3, [sp, #60]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 122              		.loc 1 132 0
 123 0056 1091     		str	r1, [sp, #64]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 124              		.loc 1 133 0
 125 0058 C023     		movs	r3, #192
 126 005a 1193     		str	r3, [sp, #68]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 127              		.loc 1 134 0
 128 005c 1292     		str	r2, [sp, #72]
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129              		.loc 1 135 0
 130 005e 0423     		movs	r3, #4
 131 0060 1393     		str	r3, [sp, #76]
 136:Core/Src/main.c ****   {
 132              		.loc 1 136 0
 133 0062 08A8     		add	r0, sp, #32
 134 0064 FFF7FEFF 		bl	HAL_RCC_OscConfig
 135              	.LVL1:
 136 0068 68B9     		cbnz	r0, .L7
 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccnTtYTB.s 			page 9


 137              		.loc 1 143 0
 138 006a 0F23     		movs	r3, #15
 139 006c 0393     		str	r3, [sp, #12]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140              		.loc 1 145 0
 141 006e 0021     		movs	r1, #0
 142 0070 0491     		str	r1, [sp, #16]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 143              		.loc 1 146 0
 144 0072 0591     		str	r1, [sp, #20]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 145              		.loc 1 147 0
 146 0074 0691     		str	r1, [sp, #24]
 148:Core/Src/main.c **** 
 147              		.loc 1 148 0
 148 0076 0791     		str	r1, [sp, #28]
 150:Core/Src/main.c ****   {
 149              		.loc 1 150 0
 150 0078 03A8     		add	r0, sp, #12
 151 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 152              	.LVL2:
 153 007e 20B9     		cbnz	r0, .L8
 154:Core/Src/main.c **** 
 154              		.loc 1 154 0
 155 0080 15B0     		add	sp, sp, #84
 156              	.LCFI2:
 157              		.cfi_remember_state
 158              		.cfi_def_cfa_offset 4
 159              		@ sp needed
 160 0082 5DF804FB 		ldr	pc, [sp], #4
 161              	.L7:
 162              	.LCFI3:
 163              		.cfi_restore_state
 138:Core/Src/main.c ****   }
 164              		.loc 1 138 0
 165 0086 FFF7FEFF 		bl	Error_Handler
 166              	.LVL3:
 167              	.L8:
 152:Core/Src/main.c ****   }
 168              		.loc 1 152 0
 169 008a FFF7FEFF 		bl	Error_Handler
 170              	.LVL4:
 171              	.L10:
 172 008e 00BF     		.align	2
 173              	.L9:
 174 0090 00380240 		.word	1073887232
 175 0094 00700040 		.word	1073770496
 176              		.cfi_endproc
 177              	.LFE131:
 179              		.section	.text.main,"ax",%progbits
 180              		.align	1
 181              		.global	main
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	main:
ARM GAS  /tmp/ccnTtYTB.s 			page 10


 188              	.LFB130:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 189              		.loc 1 67 0
 190              		.cfi_startproc
 191              		@ Volatile: function does not return.
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
 195              	.LCFI4:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 199              		.loc 1 75 0
 200 0002 FFF7FEFF 		bl	HAL_Init
 201              	.LVL5:
  82:Core/Src/main.c **** 
 202              		.loc 1 82 0
 203 0006 FFF7FEFF 		bl	SystemClock_Config
 204              	.LVL6:
  89:Core/Src/main.c ****   MX_RNG_Init();
 205              		.loc 1 89 0
 206 000a FFF7FEFF 		bl	MX_GPIO_Init
 207              	.LVL7:
  90:Core/Src/main.c ****   MX_USART1_UART_Init();
 208              		.loc 1 90 0
 209 000e FFF7FEFF 		bl	MX_RNG_Init
 210              	.LVL8:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 211              		.loc 1 91 0
 212 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 213              	.LVL9:
  94:Core/Src/main.c **** 
 214              		.loc 1 94 0
 215 0016 0248     		ldr	r0, .L14
 216 0018 FFF7FEFF 		bl	printf
 217              	.LVL10:
 218              	.L12:
 219 001c FEE7     		b	.L12
 220              	.L15:
 221 001e 00BF     		.align	2
 222              	.L14:
 223 0020 00000000 		.word	.LC0
 224              		.cfi_endproc
 225              	.LFE130:
 227              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 228              		.align	2
 229              	.LC0:
 230 0000 74657374 		.ascii	"testmessageaaaaaaaaaaaaaaaaaaaa\000"
 230      6D657373 
 230      61676561 
 230      61616161 
 230      61616161 
 231              		.text
 232              	.Letext0:
 233              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 234              		.file 4 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccnTtYTB.s 			page 11


 235              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 236              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 237              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 238              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 239              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 240              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 241              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 242              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rng.h"
 243              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 244              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 245              		.file 15 "Core/Inc/rng.h"
 246              		.file 16 "Core/Inc/usart.h"
 247              		.file 17 "Core/Inc/gpio.h"
 248              		.file 18 "<built-in>"
ARM GAS  /tmp/ccnTtYTB.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnTtYTB.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccnTtYTB.s:25     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccnTtYTB.s:52     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnTtYTB.s:59     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnTtYTB.s:174    .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccnTtYTB.s:180    .text.main:0000000000000000 $t
     /tmp/ccnTtYTB.s:187    .text.main:0000000000000000 main
     /tmp/ccnTtYTB.s:223    .text.main:0000000000000020 $d
     /tmp/ccnTtYTB.s:228    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_RNG_Init
MX_USART1_UART_Init
printf
