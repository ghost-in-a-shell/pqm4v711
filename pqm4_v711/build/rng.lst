ARM GAS  /tmp/ccFePz4v.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"rng.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_RNG_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_RNG_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_RNG_Init:
  26              	.LFB130:
  27              		.file 1 "Core/Src/rng.c"
   1:Core/Src/rng.c **** /* USER CODE BEGIN Header */
   2:Core/Src/rng.c **** /**
   3:Core/Src/rng.c ****   ******************************************************************************
   4:Core/Src/rng.c ****   * @file    rng.c
   5:Core/Src/rng.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/rng.c ****   *          of the RNG instances.
   7:Core/Src/rng.c ****   ******************************************************************************
   8:Core/Src/rng.c ****   * @attention
   9:Core/Src/rng.c ****   *
  10:Core/Src/rng.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/rng.c ****   * All rights reserved.
  12:Core/Src/rng.c ****   *
  13:Core/Src/rng.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/rng.c ****   * in the root directory of this software component.
  15:Core/Src/rng.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/rng.c ****   *
  17:Core/Src/rng.c ****   ******************************************************************************
  18:Core/Src/rng.c ****   */
  19:Core/Src/rng.c **** /* USER CODE END Header */
  20:Core/Src/rng.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/rng.c **** #include "rng.h"
  22:Core/Src/rng.c **** 
  23:Core/Src/rng.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/rng.c **** 
  25:Core/Src/rng.c **** /* USER CODE END 0 */
  26:Core/Src/rng.c **** 
  27:Core/Src/rng.c **** RNG_HandleTypeDef hrng;
  28:Core/Src/rng.c **** 
  29:Core/Src/rng.c **** /* RNG init function */
  30:Core/Src/rng.c **** void MX_RNG_Init(void)
  31:Core/Src/rng.c **** {
ARM GAS  /tmp/ccFePz4v.s 			page 2


  28              		.loc 1 31 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  32:Core/Src/rng.c **** 
  33:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_Init 0 */
  34:Core/Src/rng.c **** 
  35:Core/Src/rng.c ****   /* USER CODE END RNG_Init 0 */
  36:Core/Src/rng.c **** 
  37:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_Init 1 */
  38:Core/Src/rng.c **** 
  39:Core/Src/rng.c ****   /* USER CODE END RNG_Init 1 */
  40:Core/Src/rng.c ****   hrng.Instance = RNG;
  37              		.loc 1 40 0
  38 0002 0548     		ldr	r0, .L5
  39 0004 054B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  41:Core/Src/rng.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
  41              		.loc 1 41 0
  42 0008 FFF7FEFF 		bl	HAL_RNG_Init
  43              	.LVL0:
  44 000c 00B9     		cbnz	r0, .L4
  45              	.L1:
  46 000e 08BD     		pop	{r3, pc}
  47              	.L4:
  42:Core/Src/rng.c ****   {
  43:Core/Src/rng.c ****     Error_Handler();
  48              		.loc 1 43 0
  49 0010 FFF7FEFF 		bl	Error_Handler
  50              	.LVL1:
  44:Core/Src/rng.c ****   }
  45:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_Init 2 */
  46:Core/Src/rng.c **** 
  47:Core/Src/rng.c ****   /* USER CODE END RNG_Init 2 */
  48:Core/Src/rng.c **** 
  49:Core/Src/rng.c **** }
  51              		.loc 1 49 0
  52 0014 FBE7     		b	.L1
  53              	.L6:
  54 0016 00BF     		.align	2
  55              	.L5:
  56 0018 00000000 		.word	hrng
  57 001c 00080650 		.word	1342572544
  58              		.cfi_endproc
  59              	.LFE130:
  61              		.section	.text.HAL_RNG_MspInit,"ax",%progbits
  62              		.align	1
  63              		.global	HAL_RNG_MspInit
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccFePz4v.s 			page 3


  69              	HAL_RNG_MspInit:
  70              	.LFB131:
  50:Core/Src/rng.c **** 
  51:Core/Src/rng.c **** void HAL_RNG_MspInit(RNG_HandleTypeDef* rngHandle)
  52:Core/Src/rng.c **** {
  71              		.loc 1 52 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 8
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.LVL2:
  53:Core/Src/rng.c **** 
  54:Core/Src/rng.c ****   if(rngHandle->Instance==RNG)
  77              		.loc 1 54 0
  78 0000 0268     		ldr	r2, [r0]
  79 0002 094B     		ldr	r3, .L15
  80 0004 9A42     		cmp	r2, r3
  81 0006 00D0     		beq	.L14
  82              	.L13:
  55:Core/Src/rng.c ****   {
  56:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 0 */
  57:Core/Src/rng.c **** 
  58:Core/Src/rng.c ****   /* USER CODE END RNG_MspInit 0 */
  59:Core/Src/rng.c ****     /* RNG clock enable */
  60:Core/Src/rng.c ****     __HAL_RCC_RNG_CLK_ENABLE();
  61:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
  62:Core/Src/rng.c **** 
  63:Core/Src/rng.c ****   /* USER CODE END RNG_MspInit 1 */
  64:Core/Src/rng.c ****   }
  65:Core/Src/rng.c **** }
  83              		.loc 1 65 0
  84 0008 7047     		bx	lr
  85              	.L14:
  52:Core/Src/rng.c **** 
  86              		.loc 1 52 0
  87 000a 82B0     		sub	sp, sp, #8
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 8
  90              	.LBB2:
  60:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
  91              		.loc 1 60 0
  92 000c 0023     		movs	r3, #0
  93 000e 0193     		str	r3, [sp, #4]
  94 0010 064B     		ldr	r3, .L15+4
  95 0012 5A6B     		ldr	r2, [r3, #52]
  96 0014 42F04002 		orr	r2, r2, #64
  97 0018 5A63     		str	r2, [r3, #52]
  98 001a 5B6B     		ldr	r3, [r3, #52]
  99 001c 03F04003 		and	r3, r3, #64
 100 0020 0193     		str	r3, [sp, #4]
 101 0022 019B     		ldr	r3, [sp, #4]
 102              	.LBE2:
 103              		.loc 1 65 0
 104 0024 02B0     		add	sp, sp, #8
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 0
 107              		@ sp needed
ARM GAS  /tmp/ccFePz4v.s 			page 4


 108 0026 EFE7     		b	.L13
 109              	.L16:
 110              		.align	2
 111              	.L15:
 112 0028 00080650 		.word	1342572544
 113 002c 00380240 		.word	1073887232
 114              		.cfi_endproc
 115              	.LFE131:
 117              		.section	.text.HAL_RNG_MspDeInit,"ax",%progbits
 118              		.align	1
 119              		.global	HAL_RNG_MspDeInit
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	HAL_RNG_MspDeInit:
 126              	.LFB132:
  66:Core/Src/rng.c **** 
  67:Core/Src/rng.c **** void HAL_RNG_MspDeInit(RNG_HandleTypeDef* rngHandle)
  68:Core/Src/rng.c **** {
 127              		.loc 1 68 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132              	.LVL3:
  69:Core/Src/rng.c **** 
  70:Core/Src/rng.c ****   if(rngHandle->Instance==RNG)
 133              		.loc 1 70 0
 134 0000 0268     		ldr	r2, [r0]
 135 0002 054B     		ldr	r3, .L20
 136 0004 9A42     		cmp	r2, r3
 137 0006 00D0     		beq	.L19
 138              	.L17:
 139 0008 7047     		bx	lr
 140              	.L19:
  71:Core/Src/rng.c ****   {
  72:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspDeInit 0 */
  73:Core/Src/rng.c **** 
  74:Core/Src/rng.c ****   /* USER CODE END RNG_MspDeInit 0 */
  75:Core/Src/rng.c ****     /* Peripheral clock disable */
  76:Core/Src/rng.c ****     __HAL_RCC_RNG_CLK_DISABLE();
 141              		.loc 1 76 0
 142 000a 044A     		ldr	r2, .L20+4
 143 000c 536B     		ldr	r3, [r2, #52]
 144 000e 23F04003 		bic	r3, r3, #64
 145 0012 5363     		str	r3, [r2, #52]
  77:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspDeInit 1 */
  78:Core/Src/rng.c **** 
  79:Core/Src/rng.c ****   /* USER CODE END RNG_MspDeInit 1 */
  80:Core/Src/rng.c ****   }
  81:Core/Src/rng.c **** }
 146              		.loc 1 81 0
 147 0014 F8E7     		b	.L17
 148              	.L21:
 149 0016 00BF     		.align	2
 150              	.L20:
ARM GAS  /tmp/ccFePz4v.s 			page 5


 151 0018 00080650 		.word	1342572544
 152 001c 00380240 		.word	1073887232
 153              		.cfi_endproc
 154              	.LFE132:
 156              		.comm	hrng,16,4
 157              		.text
 158              	.Letext0:
 159              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 160              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 161              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 162              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 163              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 164              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 165              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rng.h"
 166              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 167              		.file 10 "Core/Inc/rng.h"
 168              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccFePz4v.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 rng.c
     /tmp/ccFePz4v.s:18     .text.MX_RNG_Init:0000000000000000 $t
     /tmp/ccFePz4v.s:25     .text.MX_RNG_Init:0000000000000000 MX_RNG_Init
     /tmp/ccFePz4v.s:56     .text.MX_RNG_Init:0000000000000018 $d
                            *COM*:0000000000000010 hrng
     /tmp/ccFePz4v.s:62     .text.HAL_RNG_MspInit:0000000000000000 $t
     /tmp/ccFePz4v.s:69     .text.HAL_RNG_MspInit:0000000000000000 HAL_RNG_MspInit
     /tmp/ccFePz4v.s:112    .text.HAL_RNG_MspInit:0000000000000028 $d
     /tmp/ccFePz4v.s:118    .text.HAL_RNG_MspDeInit:0000000000000000 $t
     /tmp/ccFePz4v.s:125    .text.HAL_RNG_MspDeInit:0000000000000000 HAL_RNG_MspDeInit
     /tmp/ccFePz4v.s:151    .text.HAL_RNG_MspDeInit:0000000000000018 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RNG_Init
Error_Handler
