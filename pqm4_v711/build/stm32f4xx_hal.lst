ARM GAS  /tmp/ccB8imZK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._write,"ax",%progbits
  18              		.align	1
  19              		.global	_write
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_write:
  26              	.LFB131:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @file    stm32f4xx_hal.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @attention
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * Copyright (c) 2017 STMicroelectronics.
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * All rights reserved.
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * in the root directory of this software component.
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @verbatim
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                      ##### How to use this driver #####
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The HAL contains two APIs' categories: 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Common HAL APIs
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Services HAL APIs
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @endverbatim
ARM GAS  /tmp/ccB8imZK.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */ 
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #include "stm32f4xx_hal.h"
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #include <stdio.h>
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** extern UART_HandleTypeDef huart1; 
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup STM32F4xx_HAL_Driver
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL HAL
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief HAL module driver.
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Constants
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief STM32F4xx HAL Driver version number V1.8.1
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB1   (0x08U) /*!< [23:16] sub1 version */
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB2   (0x01U) /*!< [15:8]  sub2 version */
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION         ((__STM32F4xx_HAL_VERSION_MAIN << 24U)\
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB1 << 16U)\
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB2 << 8U )\
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_RC))
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MEMRMP Register ---*/ 
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of UFB_MODE bit */ 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MEMRMP_OFFSET             SYSCFG_OFFSET 
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BIT_NUMBER       SYSCFG_MEMRMP_UFB_MODE_Pos
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BB               (uint32_t)(PERIPH_BB_BASE + (MEMRMP_OFFSET * 32U) + (UFB_MODE_BIT
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  CMPCR Register ---*/ 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of CMP_PD bit */ 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20U) 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMP_PD_BIT_NUMBER         SYSCFG_CMPCR_CMP_PD_Pos
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_CMP_PD_BB           (uint32_t)(PERIPH_BB_BASE + (CMPCR_OFFSET * 32U) + (CMP_PD_BIT_NU
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MCHDLYCR Register ---*/ 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of BSCKSEL bit */ 
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MCHDLYCR_OFFSET            (SYSCFG_OFFSET + 0x30U) 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define BSCKSEL_BIT_NUMBER         SYSCFG_MCHDLYCR_BSCKSEL_Pos
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MCHDLYCR_BSCKSEL_BB        (uint32_t)(PERIPH_BB_BASE + (MCHDLYCR_OFFSET * 32U) + (BSCKSEL_B
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
ARM GAS  /tmp/ccB8imZK.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Variables
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __IO uint32_t uwTick;
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private functions ---------------------------------------------------------*/
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim    
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****               ##### Initialization and Configuration functions #####
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           and the backup domain when enabled.
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) De-Initializes common part of the HAL.
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           Tick interrupt priority. 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              handled in milliseconds basis.
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             ISR process will be blocked. 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** int _write(int fd, char *ptr, int len)
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  28              		.loc 1 143 0
  29              		.cfi_startproc
ARM GAS  /tmp/ccB8imZK.s 			page 4


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 1446     		mov	r4, r2
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     HAL_UART_Transmit(&huart1, (uint8_t *)ptr, len, 0xFFFF);
  39              		.loc 1 144 0
  40 0004 4FF6FF73 		movw	r3, #65535
  41 0008 92B2     		uxth	r2, r2
  42              	.LVL1:
  43 000a 0248     		ldr	r0, .L3
  44              	.LVL2:
  45 000c FFF7FEFF 		bl	HAL_UART_Transmit
  46              	.LVL3:
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     return len;
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
  47              		.loc 1 146 0
  48 0010 2046     		mov	r0, r4
  49 0012 10BD     		pop	{r4, pc}
  50              	.LVL4:
  51              	.L4:
  52              		.align	2
  53              	.L3:
  54 0014 00000000 		.word	huart1
  55              		.cfi_endproc
  56              	.LFE131:
  58              		.section	.text._sys_exit,"ax",%progbits
  59              		.align	1
  60              		.global	_sys_exit
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	_sys_exit:
  67              	.LFB132:
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void _sys_exit(int x)
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  68              		.loc 1 150 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              	.LVL5:
  74 0000 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE132:
  78              		.section	.text.HAL_MspInit,"ax",%progbits
  79              		.align	1
  80              		.weak	HAL_MspInit
  81              		.syntax unified
  82              		.thumb
ARM GAS  /tmp/ccB8imZK.s 			page 5


  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	HAL_MspInit:
  87              	.LFB135:
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     x = x;
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         HAL function), it performs the following:
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configure the Flash prefetch, instruction and Data caches.
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Set NVIC Group Priority to 4.
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           "stm32f4xx_hal_msp.c" to do the global low level hardware initialization 
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *            
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         to have correct HAL operation.
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (INSTRUCTION_CACHE_ENABLE != 0U)
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (DATA_CACHE_ENABLE != 0U)
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_DATA_CACHE_ENABLE();
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Set Interrupt Group Priority */
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Init the low level hardware */
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspInit();
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         This function is optional.   
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
ARM GAS  /tmp/ccB8imZK.s 			page 6


 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* De-Init the low level hardware */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspDeInit();
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Initialize the MSP.
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspInit(void)
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  88              		.loc 1 235 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93 0000 7047     		bx	lr
  94              		.cfi_endproc
  95              	.LFE135:
  97              		.section	.text.HAL_MspDeInit,"ax",%progbits
  98              		.align	1
  99              		.weak	HAL_MspDeInit
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu fpv4-sp-d16
 105              	HAL_MspDeInit:
 106              	.LFB136:
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  DeInitializes the MSP.
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccB8imZK.s 			page 7


 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspDeInit(void)
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 107              		.loc 1 246 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112 0000 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE136:
 116              		.section	.text.HAL_DeInit,"ax",%progbits
 117              		.align	1
 118              		.global	HAL_DeInit
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	HAL_DeInit:
 125              	.LFB134:
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
 126              		.loc 1 206 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
 130              		.loc 1 206 0
 131 0000 10B5     		push	{r4, lr}
 132              	.LCFI1:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 136              		.loc 1 208 0
 137 0002 094B     		ldr	r3, .L10
 138 0004 4FF0FF32 		mov	r2, #-1
 139 0008 1A62     		str	r2, [r3, #32]
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 140              		.loc 1 209 0
 141 000a 0024     		movs	r4, #0
 142 000c 1C62     		str	r4, [r3, #32]
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 143              		.loc 1 211 0
 144 000e 5A62     		str	r2, [r3, #36]
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 145              		.loc 1 212 0
 146 0010 5C62     		str	r4, [r3, #36]
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 147              		.loc 1 214 0
 148 0012 1A61     		str	r2, [r3, #16]
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 149              		.loc 1 215 0
 150 0014 1C61     		str	r4, [r3, #16]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 151              		.loc 1 217 0
 152 0016 5A61     		str	r2, [r3, #20]
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
ARM GAS  /tmp/ccB8imZK.s 			page 8


 153              		.loc 1 218 0
 154 0018 5C61     		str	r4, [r3, #20]
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 155              		.loc 1 220 0
 156 001a 9A61     		str	r2, [r3, #24]
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 157              		.loc 1 221 0
 158 001c 9C61     		str	r4, [r3, #24]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
 159              		.loc 1 224 0
 160 001e FFF7FEFF 		bl	HAL_MspDeInit
 161              	.LVL6:
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 162              		.loc 1 228 0
 163 0022 2046     		mov	r0, r4
 164 0024 10BD     		pop	{r4, pc}
 165              	.L11:
 166 0026 00BF     		.align	2
 167              	.L10:
 168 0028 00380240 		.word	1073887232
 169              		.cfi_endproc
 170              	.LFE134:
 172              		.section	.text.HAL_InitTick,"ax",%progbits
 173              		.align	1
 174              		.weak	HAL_InitTick
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
 180              	HAL_InitTick:
 181              	.LFB137:
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */ 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function configures the source of the time base.
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        Tick interrupt priority.
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementation  in user file.
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 182              		.loc 1 269 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccB8imZK.s 			page 9


 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              	.LVL7:
 187 0000 10B5     		push	{r4, lr}
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 192 0002 0446     		mov	r4, r0
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 193              		.loc 1 271 0
 194 0004 0E4B     		ldr	r3, .L18
 195 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 196              	.LVL8:
 197 0008 4FF47A73 		mov	r3, #1000
 198 000c B3FBF0F3 		udiv	r3, r3, r0
 199 0010 0C4A     		ldr	r2, .L18+4
 200 0012 1068     		ldr	r0, [r2]
 201 0014 B0FBF3F0 		udiv	r0, r0, r3
 202 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 203              	.LVL9:
 204 001c 68B9     		cbnz	r0, .L14
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     return HAL_ERROR;
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure the SysTick IRQ priority */
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 205              		.loc 1 277 0
 206 001e 0F2C     		cmp	r4, #15
 207 0020 01D9     		bls	.L17
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     uwTickPrio = TickPriority;
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   else
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     return HAL_ERROR;
 208              		.loc 1 284 0
 209 0022 0120     		movs	r0, #1
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 210              		.loc 1 289 0
 211 0024 10BD     		pop	{r4, pc}
 212              	.LVL10:
 213              	.L17:
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     uwTickPrio = TickPriority;
 214              		.loc 1 279 0
 215 0026 0022     		movs	r2, #0
 216 0028 2146     		mov	r1, r4
 217 002a 4FF0FF30 		mov	r0, #-1
 218 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 219              	.LVL11:
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
ARM GAS  /tmp/ccB8imZK.s 			page 10


 220              		.loc 1 280 0
 221 0032 054B     		ldr	r3, .L18+8
 222 0034 1C60     		str	r4, [r3]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 223              		.loc 1 288 0
 224 0036 0020     		movs	r0, #0
 225 0038 10BD     		pop	{r4, pc}
 226              	.LVL12:
 227              	.L14:
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 228              		.loc 1 273 0
 229 003a 0120     		movs	r0, #1
 230 003c 10BD     		pop	{r4, pc}
 231              	.LVL13:
 232              	.L19:
 233 003e 00BF     		.align	2
 234              	.L18:
 235 0040 00000000 		.word	.LANCHOR0
 236 0044 00000000 		.word	SystemCoreClock
 237 0048 00000000 		.word	.LANCHOR1
 238              		.cfi_endproc
 239              	.LFE137:
 241              		.section	.text.HAL_Init,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_Init
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	HAL_Init:
 250              	.LFB133:
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 251              		.loc 1 173 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI3:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 260              		.loc 1 176 0
 261 0002 0B4B     		ldr	r3, .L22
 262 0004 1A68     		ldr	r2, [r3]
 263 0006 42F40072 		orr	r2, r2, #512
 264 000a 1A60     		str	r2, [r3]
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
 265              		.loc 1 180 0
 266 000c 1A68     		ldr	r2, [r3]
 267 000e 42F48062 		orr	r2, r2, #1024
 268 0012 1A60     		str	r2, [r3]
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 269              		.loc 1 184 0
 270 0014 1A68     		ldr	r2, [r3]
 271 0016 42F48072 		orr	r2, r2, #256
 272 001a 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccB8imZK.s 			page 11


 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 273              		.loc 1 188 0
 274 001c 0320     		movs	r0, #3
 275 001e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 276              	.LVL14:
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 277              		.loc 1 191 0
 278 0022 0F20     		movs	r0, #15
 279 0024 FFF7FEFF 		bl	HAL_InitTick
 280              	.LVL15:
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 281              		.loc 1 194 0
 282 0028 FFF7FEFF 		bl	HAL_MspInit
 283              	.LVL16:
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 284              		.loc 1 198 0
 285 002c 0020     		movs	r0, #0
 286 002e 08BD     		pop	{r3, pc}
 287              	.L23:
 288              		.align	2
 289              	.L22:
 290 0030 003C0240 		.word	1073888256
 291              		.cfi_endproc
 292              	.LFE133:
 294              		.section	.text.HAL_IncTick,"ax",%progbits
 295              		.align	1
 296              		.weak	HAL_IncTick
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	HAL_IncTick:
 303              	.LFB138:
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    HAL Control functions
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                       ##### HAL Control functions #####
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a tick value in millisecond
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a blocking delay in millisecond
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Suspend the time base source interrupt
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Resume the time base source interrupt
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the HAL API driver version
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device identifier
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device revision identifier
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
ARM GAS  /tmp/ccB8imZK.s 			page 12


 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        used as application time base.
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       in SysTick ISR.
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      implementations in user file.
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_IncTick(void)
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 304              		.loc 1 328 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uwTick += uwTickFreq;
 309              		.loc 1 329 0
 310 0000 034A     		ldr	r2, .L25
 311 0002 1168     		ldr	r1, [r2]
 312 0004 034B     		ldr	r3, .L25+4
 313 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 314 0008 0B44     		add	r3, r3, r1
 315 000a 1360     		str	r3, [r2]
 316 000c 7047     		bx	lr
 317              	.L26:
 318 000e 00BF     		.align	2
 319              	.L25:
 320 0010 00000000 		.word	uwTick
 321 0014 00000000 		.word	.LANCHOR0
 322              		.cfi_endproc
 323              	.LFE138:
 325              		.section	.text.HAL_GetTick,"ax",%progbits
 326              		.align	1
 327              		.weak	HAL_GetTick
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv4-sp-d16
 333              	HAL_GetTick:
 334              	.LFB139:
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Provides a tick value in millisecond.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick value
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 335              		.loc 1 339 0
 336              		.cfi_startproc
ARM GAS  /tmp/ccB8imZK.s 			page 13


 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTick;
 340              		.loc 1 340 0
 341 0000 014B     		ldr	r3, .L28
 342 0002 1868     		ldr	r0, [r3]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 343              		.loc 1 341 0
 344 0004 7047     		bx	lr
 345              	.L29:
 346 0006 00BF     		.align	2
 347              	.L28:
 348 0008 00000000 		.word	uwTick
 349              		.cfi_endproc
 350              	.LFE139:
 352              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 353              		.align	1
 354              		.global	HAL_GetTickPrio
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu fpv4-sp-d16
 360              	HAL_GetTickPrio:
 361              	.LFB140:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function returns a tick priority.
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick priority
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 362              		.loc 1 348 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTickPrio;
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 367              		.loc 1 350 0
 368 0000 014B     		ldr	r3, .L31
 369 0002 1868     		ldr	r0, [r3]
 370 0004 7047     		bx	lr
 371              	.L32:
 372 0006 00BF     		.align	2
 373              	.L31:
 374 0008 00000000 		.word	.LANCHOR1
 375              		.cfi_endproc
 376              	.LFE140:
 378              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 379              		.align	1
 380              		.global	HAL_SetTickFreq
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
 386              	HAL_SetTickFreq:
ARM GAS  /tmp/ccB8imZK.s 			page 14


 387              	.LFB141:
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Set new tick Freq.
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Status
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 388              		.loc 1 357 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              	.LVL17:
 393 0000 10B5     		push	{r4, lr}
 394              	.LCFI4:
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 4, -8
 397              		.cfi_offset 14, -4
 398              	.LVL18:
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (uwTickFreq != Freq)
 399              		.loc 1 363 0
 400 0002 084B     		ldr	r3, .L37
 401 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 402 0006 8442     		cmp	r4, r0
 403 0008 0AD0     		beq	.L35
 404              	.LVL19:
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     /* Back up uwTickFreq frequency */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     prevTickFreq = uwTickFreq;
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     uwTickFreq = Freq;
 405              		.loc 1 369 0
 406 000a 1870     		strb	r0, [r3]
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     /* Apply the new tick Freq  */
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 407              		.loc 1 372 0
 408 000c 064B     		ldr	r3, .L37+4
 409 000e 1868     		ldr	r0, [r3]
 410              	.LVL20:
 411 0010 FFF7FEFF 		bl	HAL_InitTick
 412              	.LVL21:
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     if (status != HAL_OK)
 413              		.loc 1 374 0
 414 0014 0346     		mov	r3, r0
 415 0016 08B1     		cbz	r0, .L34
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     {
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       /* Restore previous tick frequency */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       uwTickFreq = prevTickFreq;
 416              		.loc 1 377 0
ARM GAS  /tmp/ccB8imZK.s 			page 15


 417 0018 024A     		ldr	r2, .L37
 418 001a 1470     		strb	r4, [r2]
 419              	.LVL22:
 420              	.L34:
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     }
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return status;
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 421              		.loc 1 382 0
 422 001c 1846     		mov	r0, r3
 423 001e 10BD     		pop	{r4, pc}
 424              	.LVL23:
 425              	.L35:
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 426              		.loc 1 358 0
 427 0020 0023     		movs	r3, #0
 428 0022 FBE7     		b	.L34
 429              	.L38:
 430              		.align	2
 431              	.L37:
 432 0024 00000000 		.word	.LANCHOR0
 433 0028 00000000 		.word	.LANCHOR1
 434              		.cfi_endproc
 435              	.LFE141:
 437              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 438              		.align	1
 439              		.global	HAL_GetTickFreq
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	HAL_GetTickFreq:
 446              	.LFB142:
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Return tick frequency.
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick period in Hz
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 447              		.loc 1 389 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTickFreq;
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 452              		.loc 1 391 0
 453 0000 014B     		ldr	r3, .L40
 454 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 455 0004 7047     		bx	lr
 456              	.L41:
 457 0006 00BF     		.align	2
 458              	.L40:
 459 0008 00000000 		.word	.LANCHOR0
 460              		.cfi_endproc
ARM GAS  /tmp/ccB8imZK.s 			page 16


 461              	.LFE142:
 463              		.section	.text.HAL_Delay,"ax",%progbits
 464              		.align	1
 465              		.weak	HAL_Delay
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	HAL_Delay:
 472              	.LFB143:
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        on variable incremented.
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is incremented.
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 473              		.loc 1 405 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              	.LVL24:
 478 0000 38B5     		push	{r3, r4, r5, lr}
 479              	.LCFI5:
 480              		.cfi_def_cfa_offset 16
 481              		.cfi_offset 3, -16
 482              		.cfi_offset 4, -12
 483              		.cfi_offset 5, -8
 484              		.cfi_offset 14, -4
 485 0002 0446     		mov	r4, r0
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 486              		.loc 1 406 0
 487 0004 FFF7FEFF 		bl	HAL_GetTick
 488              	.LVL25:
 489 0008 0546     		mov	r5, r0
 490              	.LVL26:
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t wait = Delay;
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 491              		.loc 1 410 0
 492 000a B4F1FF3F 		cmp	r4, #-1
 493 000e 02D0     		beq	.L44
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 494              		.loc 1 412 0
 495 0010 044B     		ldr	r3, .L46
 496 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 0014 1C44     		add	r4, r4, r3
 498              	.LVL27:
ARM GAS  /tmp/ccB8imZK.s 			page 17


 499              	.L44:
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 500              		.loc 1 415 0 discriminator 1
 501 0016 FFF7FEFF 		bl	HAL_GetTick
 502              	.LVL28:
 503 001a 401B     		subs	r0, r0, r5
 504 001c 8442     		cmp	r4, r0
 505 001e FAD8     		bhi	.L44
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 506              		.loc 1 418 0
 507 0020 38BD     		pop	{r3, r4, r5, pc}
 508              	.LVL29:
 509              	.L47:
 510 0022 00BF     		.align	2
 511              	.L46:
 512 0024 00000000 		.word	.LANCHOR0
 513              		.cfi_endproc
 514              	.LFE143:
 516              		.section	.text.HAL_SuspendTick,"ax",%progbits
 517              		.align	1
 518              		.weak	HAL_SuspendTick
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu fpv4-sp-d16
 524              	HAL_SuspendTick:
 525              	.LFB144:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Suspend Tick increment.
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is suspended.
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_SuspendTick(void)
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 526              		.loc 1 431 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Disable SysTick Interrupt */
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 531              		.loc 1 433 0
 532 0000 024A     		ldr	r2, .L49
 533 0002 1368     		ldr	r3, [r2]
 534 0004 23F00203 		bic	r3, r3, #2
 535 0008 1360     		str	r3, [r2]
 536 000a 7047     		bx	lr
ARM GAS  /tmp/ccB8imZK.s 			page 18


 537              	.L50:
 538              		.align	2
 539              	.L49:
 540 000c 10E000E0 		.word	-536813552
 541              		.cfi_endproc
 542              	.LFE144:
 544              		.section	.text.HAL_ResumeTick,"ax",%progbits
 545              		.align	1
 546              		.weak	HAL_ResumeTick
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu fpv4-sp-d16
 552              	HAL_ResumeTick:
 553              	.LFB145:
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Resume Tick increment.
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is resumed.
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_ResumeTick(void)
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 554              		.loc 1 447 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Enable SysTick Interrupt */
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 559              		.loc 1 449 0
 560 0000 024A     		ldr	r2, .L52
 561 0002 1368     		ldr	r3, [r2]
 562 0004 43F00203 		orr	r3, r3, #2
 563 0008 1360     		str	r3, [r2]
 564 000a 7047     		bx	lr
 565              	.L53:
 566              		.align	2
 567              	.L52:
 568 000c 10E000E0 		.word	-536813552
 569              		.cfi_endproc
 570              	.LFE145:
 572              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 573              		.align	1
 574              		.global	HAL_GetHalVersion
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu fpv4-sp-d16
 580              	HAL_GetHalVersion:
 581              	.LFB146:
ARM GAS  /tmp/ccB8imZK.s 			page 19


 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the HAL revision
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 582              		.loc 1 457 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return __STM32F4xx_HAL_VERSION;
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 587              		.loc 1 459 0
 588 0000 0048     		ldr	r0, .L55
 589 0002 7047     		bx	lr
 590              	.L56:
 591              		.align	2
 592              	.L55:
 593 0004 00010801 		.word	17301760
 594              		.cfi_endproc
 595              	.LFE146:
 597              		.section	.text.HAL_GetREVID,"ax",%progbits
 598              		.align	1
 599              		.global	HAL_GetREVID
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv4-sp-d16
 605              	HAL_GetREVID:
 606              	.LFB147:
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device revision identifier.
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device revision identifier
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetREVID(void)
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 607              		.loc 1 466 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 612              		.loc 1 467 0
 613 0000 014B     		ldr	r3, .L58
 614 0002 1868     		ldr	r0, [r3]
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 615              		.loc 1 468 0
 616 0004 000C     		lsrs	r0, r0, #16
 617 0006 7047     		bx	lr
 618              	.L59:
 619              		.align	2
 620              	.L58:
 621 0008 002004E0 		.word	-536600576
ARM GAS  /tmp/ccB8imZK.s 			page 20


 622              		.cfi_endproc
 623              	.LFE147:
 625              		.section	.text.HAL_GetDEVID,"ax",%progbits
 626              		.align	1
 627              		.global	HAL_GetDEVID
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	HAL_GetDEVID:
 634              	.LFB148:
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device identifier.
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetDEVID(void)
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 635              		.loc 1 475 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 640              		.loc 1 476 0
 641 0000 024B     		ldr	r3, .L61
 642 0002 1868     		ldr	r0, [r3]
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 643              		.loc 1 477 0
 644 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 645 0008 7047     		bx	lr
 646              	.L62:
 647 000a 00BF     		.align	2
 648              	.L61:
 649 000c 002004E0 		.word	-536600576
 650              		.cfi_endproc
 651              	.LFE148:
 653              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 654              		.align	1
 655              		.global	HAL_DBGMCU_EnableDBGSleepMode
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv4-sp-d16
 661              	HAL_DBGMCU_EnableDBGSleepMode:
 662              	.LFB149:
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 663              		.loc 1 484 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccB8imZK.s 			page 21


 667              		@ link register save eliminated.
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 668              		.loc 1 485 0
 669 0000 024A     		ldr	r2, .L64
 670 0002 5368     		ldr	r3, [r2, #4]
 671 0004 43F00103 		orr	r3, r3, #1
 672 0008 5360     		str	r3, [r2, #4]
 673 000a 7047     		bx	lr
 674              	.L65:
 675              		.align	2
 676              	.L64:
 677 000c 002004E0 		.word	-536600576
 678              		.cfi_endproc
 679              	.LFE149:
 681              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 682              		.align	1
 683              		.global	HAL_DBGMCU_DisableDBGSleepMode
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv4-sp-d16
 689              	HAL_DBGMCU_DisableDBGSleepMode:
 690              	.LFB150:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 691              		.loc 1 493 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 696              		.loc 1 494 0
 697 0000 024A     		ldr	r2, .L67
 698 0002 5368     		ldr	r3, [r2, #4]
 699 0004 23F00103 		bic	r3, r3, #1
 700 0008 5360     		str	r3, [r2, #4]
 701 000a 7047     		bx	lr
 702              	.L68:
 703              		.align	2
 704              	.L67:
 705 000c 002004E0 		.word	-536600576
 706              		.cfi_endproc
 707              	.LFE150:
 709              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 710              		.align	1
 711              		.global	HAL_DBGMCU_EnableDBGStopMode
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 717              	HAL_DBGMCU_EnableDBGStopMode:
ARM GAS  /tmp/ccB8imZK.s 			page 22


 718              	.LFB151:
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 719              		.loc 1 502 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 724              		.loc 1 503 0
 725 0000 024A     		ldr	r2, .L70
 726 0002 5368     		ldr	r3, [r2, #4]
 727 0004 43F00203 		orr	r3, r3, #2
 728 0008 5360     		str	r3, [r2, #4]
 729 000a 7047     		bx	lr
 730              	.L71:
 731              		.align	2
 732              	.L70:
 733 000c 002004E0 		.word	-536600576
 734              		.cfi_endproc
 735              	.LFE151:
 737              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 738              		.align	1
 739              		.global	HAL_DBGMCU_DisableDBGStopMode
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv4-sp-d16
 745              	HAL_DBGMCU_DisableDBGStopMode:
 746              	.LFB152:
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 747              		.loc 1 511 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 752              		.loc 1 512 0
 753 0000 024A     		ldr	r2, .L73
 754 0002 5368     		ldr	r3, [r2, #4]
 755 0004 23F00203 		bic	r3, r3, #2
 756 0008 5360     		str	r3, [r2, #4]
 757 000a 7047     		bx	lr
 758              	.L74:
ARM GAS  /tmp/ccB8imZK.s 			page 23


 759              		.align	2
 760              	.L73:
 761 000c 002004E0 		.word	-536600576
 762              		.cfi_endproc
 763              	.LFE152:
 765              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 766              		.align	1
 767              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv4-sp-d16
 773              	HAL_DBGMCU_EnableDBGStandbyMode:
 774              	.LFB153:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 775              		.loc 1 520 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 780              		.loc 1 521 0
 781 0000 024A     		ldr	r2, .L76
 782 0002 5368     		ldr	r3, [r2, #4]
 783 0004 43F00403 		orr	r3, r3, #4
 784 0008 5360     		str	r3, [r2, #4]
 785 000a 7047     		bx	lr
 786              	.L77:
 787              		.align	2
 788              	.L76:
 789 000c 002004E0 		.word	-536600576
 790              		.cfi_endproc
 791              	.LFE153:
 793              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 794              		.align	1
 795              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 799              		.fpu fpv4-sp-d16
 801              	HAL_DBGMCU_DisableDBGStandbyMode:
 802              	.LFB154:
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
ARM GAS  /tmp/ccB8imZK.s 			page 24


 803              		.loc 1 529 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 808              		.loc 1 530 0
 809 0000 024A     		ldr	r2, .L79
 810 0002 5368     		ldr	r3, [r2, #4]
 811 0004 23F00403 		bic	r3, r3, #4
 812 0008 5360     		str	r3, [r2, #4]
 813 000a 7047     		bx	lr
 814              	.L80:
 815              		.align	2
 816              	.L79:
 817 000c 002004E0 		.word	-536600576
 818              		.cfi_endproc
 819              	.LFE154:
 821              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 822              		.align	1
 823              		.global	HAL_EnableCompensationCell
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv4-sp-d16
 829              	HAL_EnableCompensationCell:
 830              	.LFB155:
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_EnableCompensationCell(void)
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 831              		.loc 1 540 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)ENABLE;
 836              		.loc 1 541 0
 837 0000 0122     		movs	r2, #1
 838 0002 014B     		ldr	r3, .L82
 839 0004 1A60     		str	r2, [r3]
 840 0006 7047     		bx	lr
 841              	.L83:
 842              		.align	2
 843              	.L82:
 844 0008 00042742 		.word	1109853184
 845              		.cfi_endproc
 846              	.LFE155:
 848              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 849              		.align	1
 850              		.global	HAL_DisableCompensationCell
ARM GAS  /tmp/ccB8imZK.s 			page 25


 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv4-sp-d16
 856              	HAL_DisableCompensationCell:
 857              	.LFB156:
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DisableCompensationCell(void)
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 858              		.loc 1 551 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              		@ link register save eliminated.
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)DISABLE;
 863              		.loc 1 552 0
 864 0000 0022     		movs	r2, #0
 865 0002 014B     		ldr	r3, .L85
 866 0004 1A60     		str	r2, [r3]
 867 0006 7047     		bx	lr
 868              	.L86:
 869              		.align	2
 870              	.L85:
 871 0008 00042742 		.word	1109853184
 872              		.cfi_endproc
 873              	.LFE156:
 875              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 876              		.align	1
 877              		.global	HAL_GetUIDw0
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 881              		.fpu fpv4-sp-d16
 883              	HAL_GetUIDw0:
 884              	.LFB157:
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 885              		.loc 1 560 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
ARM GAS  /tmp/ccB8imZK.s 			page 26


 890              		.loc 1 562 0
 891 0000 014B     		ldr	r3, .L88
 892 0002 1868     		ldr	r0, [r3]
 893 0004 7047     		bx	lr
 894              	.L89:
 895 0006 00BF     		.align	2
 896              	.L88:
 897 0008 107AFF1F 		.word	536836624
 898              		.cfi_endproc
 899              	.LFE157:
 901              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 902              		.align	1
 903              		.global	HAL_GetUIDw1
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 907              		.fpu fpv4-sp-d16
 909              	HAL_GetUIDw1:
 910              	.LFB158:
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 911              		.loc 1 569 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 916              		.loc 1 571 0
 917 0000 014B     		ldr	r3, .L91
 918 0002 1868     		ldr	r0, [r3]
 919 0004 7047     		bx	lr
 920              	.L92:
 921 0006 00BF     		.align	2
 922              	.L91:
 923 0008 147AFF1F 		.word	536836628
 924              		.cfi_endproc
 925              	.LFE158:
 927              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 928              		.align	1
 929              		.global	HAL_GetUIDw2
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu fpv4-sp-d16
 935              	HAL_GetUIDw2:
 936              	.LFB159:
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
ARM GAS  /tmp/ccB8imZK.s 			page 27


 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 937              		.loc 1 578 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              		@ link register save eliminated.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 942              		.loc 1 580 0
 943 0000 014B     		ldr	r3, .L94
 944 0002 1868     		ldr	r0, [r3]
 945 0004 7047     		bx	lr
 946              	.L95:
 947 0006 00BF     		.align	2
 948              	.L94:
 949 0008 187AFF1F 		.word	536836632
 950              		.cfi_endproc
 951              	.LFE159:
 953              		.global	uwTickFreq
 954              		.global	uwTickPrio
 955              		.comm	uwTick,4,4
 956              		.section	.data.uwTickFreq,"aw",%progbits
 957              		.set	.LANCHOR0,. + 0
 960              	uwTickFreq:
 961 0000 01       		.byte	1
 962              		.section	.data.uwTickPrio,"aw",%progbits
 963              		.align	2
 964              		.set	.LANCHOR1,. + 0
 967              	uwTickPrio:
 968 0000 10000000 		.word	16
 969              		.text
 970              	.Letext0:
 971              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 972              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 973              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 974              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 975              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 976              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 977              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 978              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 979              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 980              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 981              		.file 12 "/usr/include/newlib/sys/lock.h"
 982              		.file 13 "/usr/include/newlib/sys/_types.h"
 983              		.file 14 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 984              		.file 15 "/usr/include/newlib/sys/reent.h"
 985              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccB8imZK.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal.c
     /tmp/ccB8imZK.s:18     .text._write:0000000000000000 $t
     /tmp/ccB8imZK.s:25     .text._write:0000000000000000 _write
     /tmp/ccB8imZK.s:54     .text._write:0000000000000014 $d
     /tmp/ccB8imZK.s:59     .text._sys_exit:0000000000000000 $t
     /tmp/ccB8imZK.s:66     .text._sys_exit:0000000000000000 _sys_exit
     /tmp/ccB8imZK.s:79     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccB8imZK.s:86     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccB8imZK.s:98     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccB8imZK.s:105    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccB8imZK.s:117    .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccB8imZK.s:124    .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccB8imZK.s:168    .text.HAL_DeInit:0000000000000028 $d
     /tmp/ccB8imZK.s:173    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccB8imZK.s:180    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccB8imZK.s:235    .text.HAL_InitTick:0000000000000040 $d
     /tmp/ccB8imZK.s:242    .text.HAL_Init:0000000000000000 $t
     /tmp/ccB8imZK.s:249    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccB8imZK.s:290    .text.HAL_Init:0000000000000030 $d
     /tmp/ccB8imZK.s:295    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccB8imZK.s:302    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccB8imZK.s:320    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccB8imZK.s:326    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccB8imZK.s:333    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccB8imZK.s:348    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccB8imZK.s:353    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccB8imZK.s:360    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccB8imZK.s:374    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccB8imZK.s:379    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccB8imZK.s:386    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccB8imZK.s:432    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccB8imZK.s:438    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccB8imZK.s:445    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccB8imZK.s:459    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccB8imZK.s:464    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccB8imZK.s:471    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccB8imZK.s:512    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccB8imZK.s:517    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccB8imZK.s:524    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccB8imZK.s:540    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccB8imZK.s:545    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccB8imZK.s:552    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccB8imZK.s:568    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccB8imZK.s:573    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccB8imZK.s:580    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccB8imZK.s:593    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccB8imZK.s:598    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccB8imZK.s:605    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccB8imZK.s:621    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccB8imZK.s:626    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccB8imZK.s:633    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccB8imZK.s:649    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccB8imZK.s:654    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccB8imZK.s:661    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccB8imZK.s:677    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
ARM GAS  /tmp/ccB8imZK.s 			page 29


     /tmp/ccB8imZK.s:682    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccB8imZK.s:689    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccB8imZK.s:705    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccB8imZK.s:710    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccB8imZK.s:717    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccB8imZK.s:733    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccB8imZK.s:738    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccB8imZK.s:745    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccB8imZK.s:761    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccB8imZK.s:766    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccB8imZK.s:773    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccB8imZK.s:789    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccB8imZK.s:794    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccB8imZK.s:801    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccB8imZK.s:817    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccB8imZK.s:822    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccB8imZK.s:829    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccB8imZK.s:844    .text.HAL_EnableCompensationCell:0000000000000008 $d
     /tmp/ccB8imZK.s:849    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccB8imZK.s:856    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccB8imZK.s:871    .text.HAL_DisableCompensationCell:0000000000000008 $d
     /tmp/ccB8imZK.s:876    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccB8imZK.s:883    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccB8imZK.s:897    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccB8imZK.s:902    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccB8imZK.s:909    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccB8imZK.s:923    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccB8imZK.s:928    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccB8imZK.s:935    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccB8imZK.s:949    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccB8imZK.s:960    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccB8imZK.s:967    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccB8imZK.s:963    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
