ARM GAS  /tmp/ccNN9jGx.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART1_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_USART1_UART_Init:
  26              	.LFB130:
  27              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** /* USART1 init function */
  30:Core/Src/usart.c **** 
  31:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
ARM GAS  /tmp/ccNN9jGx.s 			page 2


  32:Core/Src/usart.c **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  41:Core/Src/usart.c ****   huart1.Instance = USART1;
  37              		.loc 1 41 0
  38 0002 0A48     		ldr	r0, .L5
  39 0004 0A4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  42:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  41              		.loc 1 42 0
  42 0008 4FF4E133 		mov	r3, #115200
  43 000c 4360     		str	r3, [r0, #4]
  43:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  44              		.loc 1 43 0
  45 000e 0023     		movs	r3, #0
  46 0010 8360     		str	r3, [r0, #8]
  44:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  47              		.loc 1 44 0
  48 0012 C360     		str	r3, [r0, #12]
  45:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  49              		.loc 1 45 0
  50 0014 0361     		str	r3, [r0, #16]
  46:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  51              		.loc 1 46 0
  52 0016 0C22     		movs	r2, #12
  53 0018 4261     		str	r2, [r0, #20]
  47:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  54              		.loc 1 47 0
  55 001a 8361     		str	r3, [r0, #24]
  48:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  56              		.loc 1 48 0
  57 001c C361     		str	r3, [r0, #28]
  49:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  58              		.loc 1 49 0
  59 001e FFF7FEFF 		bl	HAL_UART_Init
  60              	.LVL0:
  61 0022 00B9     		cbnz	r0, .L4
  62              	.L1:
  63 0024 08BD     		pop	{r3, pc}
  64              	.L4:
  50:Core/Src/usart.c ****   {
  51:Core/Src/usart.c ****     Error_Handler();
ARM GAS  /tmp/ccNN9jGx.s 			page 3


  65              		.loc 1 51 0
  66 0026 FFF7FEFF 		bl	Error_Handler
  67              	.LVL1:
  52:Core/Src/usart.c ****   }
  53:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  54:Core/Src/usart.c **** 
  55:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  56:Core/Src/usart.c **** 
  57:Core/Src/usart.c **** }
  68              		.loc 1 57 0
  69 002a FBE7     		b	.L1
  70              	.L6:
  71              		.align	2
  72              	.L5:
  73 002c 00000000 		.word	huart1
  74 0030 00100140 		.word	1073811456
  75              		.cfi_endproc
  76              	.LFE130:
  78              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  79              		.align	1
  80              		.global	HAL_UART_MspInit
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	HAL_UART_MspInit:
  87              	.LFB131:
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  60:Core/Src/usart.c **** {
  88              		.loc 1 60 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 32
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL2:
  93 0000 10B5     		push	{r4, lr}
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
  98 0002 88B0     		sub	sp, sp, #32
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 40
  61:Core/Src/usart.c **** 
  62:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 101              		.loc 1 62 0
 102 0004 0023     		movs	r3, #0
 103 0006 0393     		str	r3, [sp, #12]
 104 0008 0493     		str	r3, [sp, #16]
 105 000a 0593     		str	r3, [sp, #20]
 106 000c 0693     		str	r3, [sp, #24]
 107 000e 0793     		str	r3, [sp, #28]
  63:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 108              		.loc 1 63 0
 109 0010 0268     		ldr	r2, [r0]
 110 0012 03F18043 		add	r3, r3, #1073741824
 111 0016 03F58833 		add	r3, r3, #69632
ARM GAS  /tmp/ccNN9jGx.s 			page 4


 112 001a 9A42     		cmp	r2, r3
 113 001c 01D0     		beq	.L10
 114              	.LVL3:
 115              	.L7:
  64:Core/Src/usart.c ****   {
  65:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  66:Core/Src/usart.c **** 
  67:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  68:Core/Src/usart.c ****     /* USART1 clock enable */
  69:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  70:Core/Src/usart.c **** 
  71:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  72:Core/Src/usart.c ****     /**USART1 GPIO Configuration
  73:Core/Src/usart.c ****     PA9     ------> USART1_TX
  74:Core/Src/usart.c ****     PA10     ------> USART1_RX
  75:Core/Src/usart.c ****     */
  76:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  79:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  82:Core/Src/usart.c **** 
  83:Core/Src/usart.c ****     /* USART1 interrupt Init */
  84:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
  85:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
  86:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
  87:Core/Src/usart.c **** 
  88:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
  89:Core/Src/usart.c ****   }
  90:Core/Src/usart.c **** }
 116              		.loc 1 90 0
 117 001e 08B0     		add	sp, sp, #32
 118              	.LCFI3:
 119              		.cfi_remember_state
 120              		.cfi_def_cfa_offset 8
 121              		@ sp needed
 122 0020 10BD     		pop	{r4, pc}
 123              	.LVL4:
 124              	.L10:
 125              	.LCFI4:
 126              		.cfi_restore_state
 127              	.LBB2:
  69:Core/Src/usart.c **** 
 128              		.loc 1 69 0
 129 0022 0024     		movs	r4, #0
 130 0024 0194     		str	r4, [sp, #4]
 131 0026 03F59433 		add	r3, r3, #75776
 132 002a 5A6C     		ldr	r2, [r3, #68]
 133 002c 42F01002 		orr	r2, r2, #16
 134 0030 5A64     		str	r2, [r3, #68]
 135 0032 5A6C     		ldr	r2, [r3, #68]
 136 0034 02F01002 		and	r2, r2, #16
 137 0038 0192     		str	r2, [sp, #4]
 138 003a 019A     		ldr	r2, [sp, #4]
 139              	.LBE2:
 140              	.LBB3:
ARM GAS  /tmp/ccNN9jGx.s 			page 5


  71:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 141              		.loc 1 71 0
 142 003c 0294     		str	r4, [sp, #8]
 143 003e 1A6B     		ldr	r2, [r3, #48]
 144 0040 42F00102 		orr	r2, r2, #1
 145 0044 1A63     		str	r2, [r3, #48]
 146 0046 1B6B     		ldr	r3, [r3, #48]
 147 0048 03F00103 		and	r3, r3, #1
 148 004c 0293     		str	r3, [sp, #8]
 149 004e 029B     		ldr	r3, [sp, #8]
 150              	.LBE3:
  76:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 151              		.loc 1 76 0
 152 0050 4FF4C063 		mov	r3, #1536
 153 0054 0393     		str	r3, [sp, #12]
  77:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 154              		.loc 1 77 0
 155 0056 0223     		movs	r3, #2
 156 0058 0493     		str	r3, [sp, #16]
  79:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 157              		.loc 1 79 0
 158 005a 0323     		movs	r3, #3
 159 005c 0693     		str	r3, [sp, #24]
  80:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 160              		.loc 1 80 0
 161 005e 0723     		movs	r3, #7
 162 0060 0793     		str	r3, [sp, #28]
  81:Core/Src/usart.c **** 
 163              		.loc 1 81 0
 164 0062 03A9     		add	r1, sp, #12
 165 0064 0548     		ldr	r0, .L11
 166              	.LVL5:
 167 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 168              	.LVL6:
  84:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 169              		.loc 1 84 0
 170 006a 2246     		mov	r2, r4
 171 006c 2146     		mov	r1, r4
 172 006e 2520     		movs	r0, #37
 173 0070 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 174              	.LVL7:
  85:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 175              		.loc 1 85 0
 176 0074 2520     		movs	r0, #37
 177 0076 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 178              	.LVL8:
 179              		.loc 1 90 0
 180 007a D0E7     		b	.L7
 181              	.L12:
 182              		.align	2
 183              	.L11:
 184 007c 00000240 		.word	1073872896
 185              		.cfi_endproc
 186              	.LFE131:
 188              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_UART_MspDeInit
ARM GAS  /tmp/ccNN9jGx.s 			page 6


 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	HAL_UART_MspDeInit:
 197              	.LFB132:
  91:Core/Src/usart.c **** 
  92:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  93:Core/Src/usart.c **** {
 198              		.loc 1 93 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              	.LVL9:
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI5:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
  94:Core/Src/usart.c **** 
  95:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 208              		.loc 1 95 0
 209 0002 0268     		ldr	r2, [r0]
 210 0004 084B     		ldr	r3, .L17
 211 0006 9A42     		cmp	r2, r3
 212 0008 00D0     		beq	.L16
 213              	.LVL10:
 214              	.L13:
 215 000a 08BD     		pop	{r3, pc}
 216              	.LVL11:
 217              	.L16:
  96:Core/Src/usart.c ****   {
  97:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
  98:Core/Src/usart.c **** 
  99:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 100:Core/Src/usart.c ****     /* Peripheral clock disable */
 101:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 218              		.loc 1 101 0
 219 000c 074A     		ldr	r2, .L17+4
 220 000e 536C     		ldr	r3, [r2, #68]
 221 0010 23F01003 		bic	r3, r3, #16
 222 0014 5364     		str	r3, [r2, #68]
 102:Core/Src/usart.c **** 
 103:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 104:Core/Src/usart.c ****     PA9     ------> USART1_TX
 105:Core/Src/usart.c ****     PA10     ------> USART1_RX
 106:Core/Src/usart.c ****     */
 107:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 223              		.loc 1 107 0
 224 0016 4FF4C061 		mov	r1, #1536
 225 001a 0548     		ldr	r0, .L17+8
 226              	.LVL12:
 227 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 228              	.LVL13:
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 110:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
ARM GAS  /tmp/ccNN9jGx.s 			page 7


 229              		.loc 1 110 0
 230 0020 2520     		movs	r0, #37
 231 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 232              	.LVL14:
 111:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 112:Core/Src/usart.c **** 
 113:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 114:Core/Src/usart.c ****   }
 115:Core/Src/usart.c **** }
 233              		.loc 1 115 0
 234 0026 F0E7     		b	.L13
 235              	.L18:
 236              		.align	2
 237              	.L17:
 238 0028 00100140 		.word	1073811456
 239 002c 00380240 		.word	1073887232
 240 0030 00000240 		.word	1073872896
 241              		.cfi_endproc
 242              	.LFE132:
 244              		.comm	huart1,68,4
 245              		.text
 246              	.Letext0:
 247              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 248              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 249              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 250              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 251              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 252              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 253              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 254              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 255              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 256              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 257              		.file 12 "Core/Inc/usart.h"
 258              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 259              		.file 14 "Core/Inc/main.h"
ARM GAS  /tmp/ccNN9jGx.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccNN9jGx.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccNN9jGx.s:25     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccNN9jGx.s:73     .text.MX_USART1_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart1
     /tmp/ccNN9jGx.s:79     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccNN9jGx.s:86     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccNN9jGx.s:184    .text.HAL_UART_MspInit:000000000000007c $d
     /tmp/ccNN9jGx.s:189    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccNN9jGx.s:196    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccNN9jGx.s:238    .text.HAL_UART_MspDeInit:0000000000000028 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
